//Verilog generated by VPR 0.0.0+30feb784-dirty from post-place-and-route implementation
module up_counter (
    input \enable ,
    input \clk ,
    input \reset ,
    output \out[0] ,
    output \out[1] ,
    output \out[2] ,
    output \out[3] 
);

    //Wires
    wire \enable_output_0_0 ;
    wire \clk_output_0_0 ;
    wire \reset_output_0_0 ;
    wire \latch_out[0]_output_0_0 ;
    wire \latch_out[1]_output_0_0 ;
    wire \latch_out[2]_output_0_0 ;
    wire \latch_out[3]_output_0_0 ;
    wire \lut_n16_output_0_0 ;
    wire \lut_n20_output_0_0 ;
    wire \lut_n24_output_0_0 ;
    wire \lut_n28_output_0_0 ;
    wire \lut_$abc$181$new_n13__output_0_0 ;
    wire \lut_$abc$181$new_n16__output_0_0 ;
    wire \lut_$abc$181$new_n16__input_0_1 ;
    wire \lut_n16_input_0_0 ;
    wire \lut_$abc$181$new_n13__input_0_0 ;
    wire \latch_out[3]_clock_0_0 ;
    wire \latch_out[0]_clock_0_0 ;
    wire \latch_out[1]_clock_0_0 ;
    wire \latch_out[2]_clock_0_0 ;
    wire \lut_n28_input_0_2 ;
    wire \lut_n16_input_0_2 ;
    wire \lut_n20_input_0_1 ;
    wire \lut_n24_input_0_0 ;
    wire \lut_$abc$181$new_n16__input_0_2 ;
    wire \lut_n16_input_0_1 ;
    wire \lut_$abc$181$new_n13__input_0_1 ;
    wire \out[0]_input_0_0 ;
    wire \lut_$abc$181$new_n16__input_0_3 ;
    wire \lut_n20_input_0_2 ;
    wire \lut_n24_input_0_3 ;
    wire \out[1]_input_0_0 ;
    wire \lut_$abc$181$new_n16__input_0_0 ;
    wire \lut_n24_input_0_2 ;
    wire \out[2]_input_0_0 ;
    wire \lut_n28_input_0_1 ;
    wire \out[3]_input_0_0 ;
    wire \latch_out[0]_input_0_0 ;
    wire \latch_out[1]_input_0_0 ;
    wire \latch_out[2]_input_0_0 ;
    wire \latch_out[3]_input_0_0 ;
    wire \lut_n20_input_0_0 ;
    wire \lut_n24_input_0_1 ;
    wire \lut_n28_input_0_0 ;

    //IO assignments
    assign \out[0]  = \out[0]_input_0_0 ;
    assign \out[1]  = \out[1]_input_0_0 ;
    assign \out[2]  = \out[2]_input_0_0 ;
    assign \out[3]  = \out[3]_input_0_0 ;
    assign \enable_output_0_0  = \enable ;
    assign \clk_output_0_0  = \clk ;
    assign \reset_output_0_0  = \reset ;

    //Interconnect
    fpga_interconnect \routing_segment_enable_output_0_0_to_lut_$abc$181$new_n16__input_0_1  (
        .datain(\enable_output_0_0 ),
        .dataout(\lut_$abc$181$new_n16__input_0_1 )
    );

    fpga_interconnect \routing_segment_enable_output_0_0_to_lut_n16_input_0_0  (
        .datain(\enable_output_0_0 ),
        .dataout(\lut_n16_input_0_0 )
    );

    fpga_interconnect \routing_segment_enable_output_0_0_to_lut_$abc$181$new_n13__input_0_0  (
        .datain(\enable_output_0_0 ),
        .dataout(\lut_$abc$181$new_n13__input_0_0 )
    );

    fpga_interconnect \routing_segment_clk_output_0_0_to_latch_out[3]_clock_0_0  (
        .datain(\clk_output_0_0 ),
        .dataout(\latch_out[3]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clk_output_0_0_to_latch_out[0]_clock_0_0  (
        .datain(\clk_output_0_0 ),
        .dataout(\latch_out[0]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clk_output_0_0_to_latch_out[1]_clock_0_0  (
        .datain(\clk_output_0_0 ),
        .dataout(\latch_out[1]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clk_output_0_0_to_latch_out[2]_clock_0_0  (
        .datain(\clk_output_0_0 ),
        .dataout(\latch_out[2]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_n28_input_0_2  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_n28_input_0_2 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_n16_input_0_2  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_n16_input_0_2 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_n20_input_0_1  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_n20_input_0_1 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_n24_input_0_0  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_n24_input_0_0 )
    );

    fpga_interconnect \routing_segment_latch_out[0]_output_0_0_to_lut_$abc$181$new_n16__input_0_2  (
        .datain(\latch_out[0]_output_0_0 ),
        .dataout(\lut_$abc$181$new_n16__input_0_2 )
    );

    fpga_interconnect \routing_segment_latch_out[0]_output_0_0_to_lut_n16_input_0_1  (
        .datain(\latch_out[0]_output_0_0 ),
        .dataout(\lut_n16_input_0_1 )
    );

    fpga_interconnect \routing_segment_latch_out[0]_output_0_0_to_lut_$abc$181$new_n13__input_0_1  (
        .datain(\latch_out[0]_output_0_0 ),
        .dataout(\lut_$abc$181$new_n13__input_0_1 )
    );

    fpga_interconnect \routing_segment_latch_out[0]_output_0_0_to_out[0]_input_0_0  (
        .datain(\latch_out[0]_output_0_0 ),
        .dataout(\out[0]_input_0_0 )
    );

    fpga_interconnect \routing_segment_latch_out[1]_output_0_0_to_lut_$abc$181$new_n16__input_0_3  (
        .datain(\latch_out[1]_output_0_0 ),
        .dataout(\lut_$abc$181$new_n16__input_0_3 )
    );

    fpga_interconnect \routing_segment_latch_out[1]_output_0_0_to_lut_n20_input_0_2  (
        .datain(\latch_out[1]_output_0_0 ),
        .dataout(\lut_n20_input_0_2 )
    );

    fpga_interconnect \routing_segment_latch_out[1]_output_0_0_to_lut_n24_input_0_3  (
        .datain(\latch_out[1]_output_0_0 ),
        .dataout(\lut_n24_input_0_3 )
    );

    fpga_interconnect \routing_segment_latch_out[1]_output_0_0_to_out[1]_input_0_0  (
        .datain(\latch_out[1]_output_0_0 ),
        .dataout(\out[1]_input_0_0 )
    );

    fpga_interconnect \routing_segment_latch_out[2]_output_0_0_to_lut_$abc$181$new_n16__input_0_0  (
        .datain(\latch_out[2]_output_0_0 ),
        .dataout(\lut_$abc$181$new_n16__input_0_0 )
    );

    fpga_interconnect \routing_segment_latch_out[2]_output_0_0_to_lut_n24_input_0_2  (
        .datain(\latch_out[2]_output_0_0 ),
        .dataout(\lut_n24_input_0_2 )
    );

    fpga_interconnect \routing_segment_latch_out[2]_output_0_0_to_out[2]_input_0_0  (
        .datain(\latch_out[2]_output_0_0 ),
        .dataout(\out[2]_input_0_0 )
    );

    fpga_interconnect \routing_segment_latch_out[3]_output_0_0_to_lut_n28_input_0_1  (
        .datain(\latch_out[3]_output_0_0 ),
        .dataout(\lut_n28_input_0_1 )
    );

    fpga_interconnect \routing_segment_latch_out[3]_output_0_0_to_out[3]_input_0_0  (
        .datain(\latch_out[3]_output_0_0 ),
        .dataout(\out[3]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_n16_output_0_0_to_latch_out[0]_input_0_0  (
        .datain(\lut_n16_output_0_0 ),
        .dataout(\latch_out[0]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_n20_output_0_0_to_latch_out[1]_input_0_0  (
        .datain(\lut_n20_output_0_0 ),
        .dataout(\latch_out[1]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_n24_output_0_0_to_latch_out[2]_input_0_0  (
        .datain(\lut_n24_output_0_0 ),
        .dataout(\latch_out[2]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_n28_output_0_0_to_latch_out[3]_input_0_0  (
        .datain(\lut_n28_output_0_0 ),
        .dataout(\latch_out[3]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$181$new_n13__output_0_0_to_lut_n20_input_0_0  (
        .datain(\lut_$abc$181$new_n13__output_0_0 ),
        .dataout(\lut_n20_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$181$new_n13__output_0_0_to_lut_n24_input_0_1  (
        .datain(\lut_$abc$181$new_n13__output_0_0 ),
        .dataout(\lut_n24_input_0_1 )
    );

    fpga_interconnect \routing_segment_lut_$abc$181$new_n16__output_0_0_to_lut_n28_input_0_0  (
        .datain(\lut_$abc$181$new_n16__output_0_0 ),
        .dataout(\lut_n28_input_0_0 )
    );


    //Cell instances
    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00000110)
    ) \lut_n28  (
        .in({
            \lut_n28_input_0_2 ,
            \lut_n28_input_0_1 ,
            \lut_n28_input_0_0 }),
        .out(\lut_n28_output_0_0 )
    );

    DFF #(
        .INITIAL_VALUE(1'b0)
    ) \latch_out[3]  (
        .D(\latch_out[3]_input_0_0 ), 
        .Q(\latch_out[3]_output_0_0 ), 
        .clock(\latch_out[3]_clock_0_0 )
    );
    LUT_K #(
        .K(4),
        .LUT_MASK(16'b1000000000000000)
    ) \lut_$abc$181$new_n16_  (
        .in({
            \lut_$abc$181$new_n16__input_0_3 ,
            \lut_$abc$181$new_n16__input_0_2 ,
            \lut_$abc$181$new_n16__input_0_1 ,
            \lut_$abc$181$new_n16__input_0_0 }),
        .out(\lut_$abc$181$new_n16__output_0_0 )
    );

    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00000110)
    ) \lut_n16  (
        .in({
            \lut_n16_input_0_2 ,
            \lut_n16_input_0_1 ,
            \lut_n16_input_0_0 }),
        .out(\lut_n16_output_0_0 )
    );

    DFF #(
        .INITIAL_VALUE(1'b0)
    ) \latch_out[0]  (
        .D(\latch_out[0]_input_0_0 ), 
        .Q(\latch_out[0]_output_0_0 ), 
        .clock(\latch_out[0]_clock_0_0 )
    );
    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00001000)
    ) \lut_$abc$181$new_n13_  (
        .in({
            1'b0,
            \lut_$abc$181$new_n13__input_0_1 ,
            \lut_$abc$181$new_n13__input_0_0 }),
        .out(\lut_$abc$181$new_n13__output_0_0 )
    );

    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00010010)
    ) \lut_n20  (
        .in({
            \lut_n20_input_0_2 ,
            \lut_n20_input_0_1 ,
            \lut_n20_input_0_0 }),
        .out(\lut_n20_output_0_0 )
    );

    DFF #(
        .INITIAL_VALUE(1'b0)
    ) \latch_out[1]  (
        .D(\latch_out[1]_input_0_0 ), 
        .Q(\latch_out[1]_output_0_0 ), 
        .clock(\latch_out[1]_clock_0_0 )
    );
    LUT_K #(
        .K(4),
        .LUT_MASK(16'b0001010001010000)
    ) \lut_n24  (
        .in({
            \lut_n24_input_0_3 ,
            \lut_n24_input_0_2 ,
            \lut_n24_input_0_1 ,
            \lut_n24_input_0_0 }),
        .out(\lut_n24_output_0_0 )
    );

    DFF #(
        .INITIAL_VALUE(1'b0)
    ) \latch_out[2]  (
        .D(\latch_out[2]_input_0_0 ), 
        .Q(\latch_out[2]_output_0_0 ), 
        .clock(\latch_out[2]_clock_0_0 )
    );

endmodule
